generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:root@mysql:3306/petado?connect_timeout=100"
}

model User {
  id          Int         @id @default(autoincrement())
  email       String      @unique
  name        String?
  password    String
  address     String
  mobile      String
  gender      Gender
  profession  String
  wardNumber  String      @default("")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt @default(now())
  lastLogin   DateTime
  permissions String      @default("[]")
  request     Request[]
  admin       Admin?
  councillor  Councillor?
}

model DogImage {
  id        Int      @id @default(autoincrement())
  name      String
  location  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  dogId     Int?
  mimeType  String   @default("image/jpeg")
  size      Int      @default(0)
  Dog       Dog?     @relation(fields: [dogId], references: [id])

  @@index([dogId], map: "DogImage_dogId_fkey")
}

model Request {
  id          Int      @id @default(autoincrement())
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
  creatorId   Int
  dogs        Dog[]
  creator     User     @relation(fields: [creatorId], references: [id])

  @@index([creatorId], map: "Request_creatorId_fkey")
}

model Dog {
  id              Int        @id @default(autoincrement())
  registerationId String
  gender          DogGender
  age             Int?
  color           String
  description     String
  breed           String
  price           Float
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt @default(now())
  requestId       Int?
  type            DogType
  request         Request?   @relation(fields: [requestId], references: [id])
  images          DogImage[]

  @@index([requestId], map: "Dog_requestId_fkey")
}

model Admin {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Councillor {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id])
  wardNumber String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt @default(now())
}

enum Gender {
  MALE
  FEMALE
}

enum DogGender {
  MALE
  FEMALE
  UNKNOWN
}

enum DogType {
  STREET
  PET
}
